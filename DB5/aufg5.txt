5. 
Geben Sie für alle AI-Studierenden aus, ob sie an einer Klausur im Fach Datenbanken teilgenommen haben. Wenn ja, mit dem Klausurdatum, wenn nein stattdessen mit NULL oder ähnlich

SELECT Distinct Student.Name, Klausur.Klausurdatum 
FROM Vorlesung
left JOIN Klausur ON KLausur.Vorlesungsname = 'DB'
left JOIN Schreibt ON Schreibt.Klausurschlüssel = klausur.Klausurschlüssel
full JOIN Student ON STUDENT.MATRNR = SCHREIBT.MATRNR;

6. 
Geben Sie die Titel (Bezeichnung) der Vorlesungen aus, die der Professor Eisenhart nicht unterrichtet

Select Vorlesungsname from Vorlesung, Dozent where Vorlesung.PERSONALID <> '06';

7. 
Geben Sie für alle Teilnehmer der Datenbankklausur im WS2015/16 statt der Punktzahl 1..15 die Note aus. 15-13: sehr gut, 12-10: gut, 9-7: befriedigend, 6,5: ausreichend, <5: nicht bestanden. 

select MatrNr,
    case SCHREIBT.Punkte
        when 15 then 'sehr gut'
        when 14 then 'sehr gut'
        when 13 then 'sehr gut'
        when 12 then 'gut'
        when 11 then 'gut'
        when 10 then 'gut'
        when 9 then 'befriedigend'
        when 8 then 'befriedigend'
        when 7 then 'befriedigend'
        when 6 then 'ausreichend'
        when 5 then 'ausreichend'
        when 4 then 'nicht bestanden'
        when 3 then 'nicht bestanden'
        when 2 then 'nicht bestanden'
        when 1 then 'nicht bestanden'
        when 0 then 'nicht bestanden'
    end as Punkte
from schreibt;

8.
Erstellen Sie drei Views, die für die Professoren, wissenschaftlichen Mitarbeiter und das Verwaltungspersonal jeweils die spezifischen Attribute und die aus der Tabelle Mitarbeiter enthält. 

CREATE	VIEW	DozInfo	(Name, PersonalID, Departmentname)	
AS	SELECT  Mitarbeiter.Name, Mitarbeiter.PersonalID, Mitarbeiter.Departmentname 
FROM Mitarbeiter, Dozent WHERE	Mitarbeiter.PersonalID	=	Dozent.PersonalID;

CREATE	VIEW	WiMiInfo	(Name, PersonalID, Departmentname)	
AS	SELECT Mitarbeiter.Name, Mitarbeiter.PersonalID, Mitarbeiter.Departmentname 
FROM Mitarbeiter, Wis_Mitarbeiter WHERE	Mitarbeiter.PersonalID	=	Wis_Mitarbeiter.PersonalID;

CREATE	VIEW	VerPerInfo	(Name, PersonalID, Departmentname)	
AS	SELECT Mitarbeiter.Name, Mitarbeiter.PersonalID, Mitarbeiter.Departmentname 
FROM Mitarbeiter, Verwaltungspersonal WHERE	Mitarbeiter.PersonalID	=	Verwaltungspersonal.PersonalID;

9. 
Erstellen Sie eine View, die die Namen der Studierenden, die Bezeichnung ihres Studiengangs und die Bezeichnung des zugehörigen Departments enthält. 
Warum ist hier kein INSERT möglich?

MATRNR  DEPARTMENT STUDIENGAN NAME                 VORNAME              MATRDATU WOHNORT             
------- ---------- ---------- -------------------- -------------------- -------- --------------------
1234567 TI         BTI1       Mustermann           Max                  01.01.70 Musterhausen        
2319195 AI         BAI1       Schomacker           Thorben              01.01.70 Hamburg             
2319845 AI         BAI1       Trendelenburg        Ferdinand            01.01.70 Berlin              
2319846 WI         BWI1       Gerken               Gerken               01.01.70 Gerkenburg          
9876543 WI         BWI1       Sack                 Fauler               01.01.70 Sackstadt   

CREATE	VIEW	StudiInfo	(Name, Studiengangsbezeichnung, Departmentname)	
AS	SELECT  Name, Studiengangsbezeichnung, Departmentname FROM Student;
